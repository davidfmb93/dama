/* BUTTONS */

.btn {
	@include flex($fw: nowrap, $d:inline-flex);
	@extend %width100;
	// max-width: 220px;
	width: auto;
	min-width: 210px;
	// max-width: 350px;
	min-height: 50px;
	vertical-align: middle;
	border: 1px solid transparent;
	padding: 7px 10px;
	outline: none;
	background: $black;
	font-family: $Knockout-H72;
	text-align: center;
	color: $beigeY;
	@extend %title;
	text-transform: uppercase;
	cursor: pointer;
	@include transition;
	&--border {
		min-height: initial;
		padding: 2px;
		border: none;
		background: linear-gradient(to bottom, $white, $xdBlue);
		.btn {
			&__container {
				@include flex;
				width: 100%;
				min-height: 46px;
				height: 100%;
				padding: 7px 10px;
				border-radius: inherit;
				background: linear-gradient(to bottom right, $dBlue, $xdBlue);
				line-height: 1;
			}
		}
	}

	&--iconL {
		&::before {
			@include flex;
			content: "";
			width: 12px;
			height: 12px;
			margin-right: 10px;
			background: green;
		}
	}
	&--iconR {
		&::after {
			@include flex;
			content: "";
			width: 12px;
			height: 12px;
			margin-left: 10px;
			background: green;
		}
	}
	&--line {
		border-color: $red;
		background: transparent;
		color: $red;
		&:hover {
			background: $red;
			color: $white;
		}
	}
	&--border {
		border: 2px solid $white;
		background: transparent;
		.btn {
			&__container {
				background: transparent;
			}
		}
	}
}

// HAMBURGER BTN

.hamburgerBtn {
	@include flex;
	width: $widthBarHam + 8;
	height: $widthBarHam + 8;
	@if $acSizeHam {
		width: $sizeHam;
		height: $sizeHam;
	}
	background: $bgHam;
	position: relative;
	overflow: hidden;
	&__line {
		display: block;
		width: $widthBarHam;
		@if $acSizeHam {
			width: 90%;
		}
		height: $heightBarHam;
		background: $colorBarHam;
		@if $radiusBarHam {
			border-radius: $radiusBarHam;
		}
		@include transition;
		overflow: hidden;
		&:first-of-type {
			transform: translateY((-$spaceBar));
		}
		&:last-of-type {
			transform: translateY($spaceBar);
		}
	}
	&.active {
		.hamburgerBtn__line {
			&:first-of-type {
				transform: translateY($heightBarHam) rotate(-45deg);
			}
			&:nth-of-type(2) {
				opacity: 0;
			}
			&:last-of-type {
				transform: translateY((-$heightBarHam)) rotate(45deg);
				transition-delay: .1s;
			}
		}
	}
}